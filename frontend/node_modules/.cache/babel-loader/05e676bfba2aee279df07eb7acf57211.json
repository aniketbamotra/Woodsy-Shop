{"ast":null,"code":"import _asyncToGenerator from\"D:/GithubProjects/Woodsy-Shop/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/GithubProjects/Woodsy-Shop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\GithubProjects\\\\Woodsy-Shop\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from'react';import{useRef}from'react';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ReactPayPal(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),paid=_React$useState2[0],setPaid=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),error=_React$useState4[0],setError=_React$useState4[1];var paypalRef=React.useRef();React.useEffect(function(){window.paypal.Buttons({createOrder:function createOrder(data,actions){return actions.order.create({intent:\"CAPTURE\",purchase_units:[{description:\"Your description\",amount:{currency_code:\"INR\",value:500.0}}]});},onApprove:function(){var _onApprove=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data,actions){var order;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return actions.order.capture();case 2:order=_context.sent;setPaid(true);console.log(order);case 5:case\"end\":return _context.stop();}}},_callee);}));function onApprove(_x,_x2){return _onApprove.apply(this,arguments);}return onApprove;}(),onError:function onError(err){//   setError(err),\nconsole.error(err);}}).render(paypalRef.current);},[]);return/*#__PURE__*/_jsx(\"div\",{});}","map":{"version":3,"sources":["D:/GithubProjects/Woodsy-Shop/frontend/src/components/PaypalBtn.jsx"],"names":["React","useRef","useEffect","ReactPayPal","useState","paid","setPaid","error","setError","paypalRef","window","paypal","Buttons","createOrder","data","actions","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current"],"mappings":"+XAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,C,2CAEA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,oBAAwBH,KAAK,CAACI,QAAN,CAAe,KAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAA0BN,KAAK,CAACI,QAAN,CAAe,IAAf,CAA1B,qDAAOG,KAAP,qBAAcC,QAAd,qBACA,GAAMC,CAAAA,SAAS,CAAGT,KAAK,CAACC,MAAN,EAAlB,CAEAD,KAAK,CAACE,SAAN,CAAgB,UAAM,CACpBQ,MAAM,CAACC,MAAP,CACGC,OADH,CACW,CACPC,WAAW,CAAE,qBAACC,IAAD,CAAOC,OAAP,CAAmB,CAC9B,MAAOA,CAAAA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB,CAC1BC,MAAM,CAAE,SADkB,CAE1BC,cAAc,CAAE,CACd,CACEC,WAAW,CAAE,kBADf,CAEEC,MAAM,CAAE,CACNC,aAAa,CAAE,KADT,CAENC,KAAK,CAAE,KAFD,CAFV,CADc,CAFU,CAArB,CAAP,CAYD,CAdM,CAePC,SAAS,mFAAE,iBAAOV,IAAP,CAAaC,OAAb,kJACWA,CAAAA,OAAO,CAACC,KAAR,CAAcS,OAAd,EADX,QACHT,KADG,eAETV,OAAO,CAAC,IAAD,CAAP,CACAoB,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAHS,sDAAF,2FAfF,CAoBPY,OAAO,CAAE,iBAACC,GAAD,CAAS,CAClB;AACEH,OAAO,CAACnB,KAAR,CAAcsB,GAAd,EACD,CAvBM,CADX,EA0BGC,MA1BH,CA0BUrB,SAAS,CAACsB,OA1BpB,EA2BD,CA5BD,CA4BG,EA5BH,EA6BE,mBACI,cADJ,CAKH","sourcesContent":["import React from 'react'\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ReactPayPal() {\r\n  const [paid, setPaid] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  const paypalRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions) => {\r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Your description\",\r\n                amount: {\r\n                  currency_code: \"INR\",\r\n                  value: 500.0,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          setPaid(true);\r\n          console.log(order);\r\n        },\r\n        onError: (err) => {\r\n        //   setError(err),\r\n          console.error(err);\r\n        },\r\n      })\r\n      .render(paypalRef.current);\r\n  }, []);\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}