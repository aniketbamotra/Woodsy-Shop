{"ast":null,"code":"var _jsxFileName = \"D:\\\\GithubProjects\\\\Woodsy-Shop\\\\frontend\\\\src\\\\components\\\\ProductGrid\\\\ProductGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Product from \"../Product/Product\";\nimport \"./ProductGrid.css\";\nimport { AllProd } from \"../../products\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport prodData from \"../../../products.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductGrid = _ref => {\n  _s();\n\n  let {\n    filter,\n    sort,\n    getProd\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        // const res = await axios.get(\n        //   \"https://managedatabase.woodsyshoppe.com/api/products\"\n        // );\n        setProducts(prodData);\n        console.log(prodData);\n      } catch (err) {}\n    };\n\n    getProducts();\n  }, []);\n  useEffect(() => {\n    if (filter === \"all\") {\n      setFilteredProducts(products);\n      return;\n    }\n\n    setFilteredProducts(products.filter(product => product.category === filter));\n  }, [filter, products]);\n  useEffect(() => {\n    if (sort === \"best-sellers\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => b.numberOfItemsSold - a.numberOfItemsSold));\n    } else if (sort === \"price-asc\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => a.price - b.price));\n    } else if (sort === \"price-desc\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => b.price - a.price));\n    } else if (sort === \"oldest\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => new Date(a.addedToCartAt) - new Date(b.addedToCartAt)));\n    } else if (sort === \"newest\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => new Date(b.addedToCartAt) - new Date(a.addedToCartAt)));\n    }\n  }, [sort]);\n  const prod = filteredProducts.length;\n  getProd(prod);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-wrap\",\n    children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/product/${product._id}`,\n      children: /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, product._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductGrid, \"K1gQB4m1/iw3k3jmt5rFCbNdg2E=\");\n\n_c = ProductGrid;\nexport default ProductGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductGrid\");","map":{"version":3,"sources":["D:/GithubProjects/Woodsy-Shop/frontend/src/components/ProductGrid/ProductGrid.jsx"],"names":["React","useState","useEffect","Product","AllProd","axios","Link","prodData","ProductGrid","filter","sort","getProd","products","setProducts","filteredProducts","setFilteredProducts","getProducts","console","log","err","product","category","prev","a","b","numberOfItemsSold","price","Date","addedToCartAt","prod","length","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Product from \"../Product/Product\";\r\nimport \"./ProductGrid.css\";\r\nimport { AllProd } from \"../../products\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport prodData from \"../../../products.json\";\r\n\r\nconst ProductGrid = ({ filter, sort, getProd }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        // const res = await axios.get(\r\n        //   \"https://managedatabase.woodsyshoppe.com/api/products\"\r\n        // );\r\n\r\n        setProducts(prodData);\r\n        console.log(prodData);\r\n      } catch (err) {}\r\n    };\r\n    getProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filter === \"all\") {\r\n      setFilteredProducts(products);\r\n      return;\r\n    }\r\n    setFilteredProducts(\r\n      products.filter((product) => product.category === filter)\r\n    );\r\n  }, [filter, products]);\r\n\r\n  useEffect(() => {\r\n    if (sort === \"best-sellers\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => b.numberOfItemsSold - a.numberOfItemsSold)\r\n      );\r\n    } else if (sort === \"price-asc\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => a.price - b.price)\r\n      );\r\n    } else if (sort === \"price-desc\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => b.price - a.price)\r\n      );\r\n    } else if (sort === \"oldest\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort(\r\n          (a, b) => new Date(a.addedToCartAt) - new Date(b.addedToCartAt)\r\n        )\r\n      );\r\n    } else if (sort === \"newest\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort(\r\n          (a, b) => new Date(b.addedToCartAt) - new Date(a.addedToCartAt)\r\n        )\r\n      );\r\n    }\r\n  }, [sort]);\r\n\r\n  const prod = filteredProducts.length;\r\n  getProd(prod);\r\n\r\n  return (\r\n    <div className=\"grid-wrap\">\r\n      {filteredProducts.map((product) => (\r\n        <Link key={product._id} to={`/product/${product._id}`}>\r\n          <Product product={product} />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductGrid;\r\n"]},"metadata":{},"sourceType":"module"}