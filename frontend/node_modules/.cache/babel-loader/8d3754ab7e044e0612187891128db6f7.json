{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\woodsy\\\\frontend\\\\src\\\\context\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  products: [],\n  totalAmount: 0\n};\n\nconst saveCartOnLocal = cartState => {\n  localStorage.setItem(\"cartState\", JSON.stringify(cartState));\n};\n\nconst getLocalCartState = () => {\n  const state = JSON.parse(localStorage.getItem(\"cartState\"));\n  if (state) return { ...state,\n    totalAmount: +state.totalAmount\n  };\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const currProduct = action.payload;\n    const updatedTotalAmount = state.totalAmount + currProduct.price * currProduct.amount;\n    console.log(updatedTotalAmount);\n    const existingCartProductIndex = state.products.findIndex(product => product._id === currProduct._id);\n    const existingCartProduct = state.products[existingCartProductIndex];\n    let updatedProducts;\n\n    if (existingCartProduct) {\n      const updatedProduct = { ...existingCartProduct,\n        amount: existingCartProduct.amount + currProduct.amount\n      };\n      updatedProducts = [...state.products];\n      updatedProducts[existingCartProductIndex] = updatedProduct;\n    } else {\n      updatedProducts = state.products.concat(currProduct);\n    }\n\n    const cartState = {\n      products: updatedProducts,\n      totalAmount: Math.round((updatedTotalAmount + Number.EPSILON) * 100) / 100\n    };\n    saveCartOnLocal(cartState);\n    return cartState;\n  }\n\n  if (action.type === \"REMOVE\") {\n    const currProductId = action.payload;\n    const existingCartProductIndex = state.products.findIndex(product => product._id === currProductId);\n    const existingCartProduct = state.products[existingCartProductIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartProduct.price;\n    let updatedProducts;\n\n    if (existingCartProduct.amount === 1) {\n      updatedProducts = state.products.filter(product => product._id !== currProductId);\n    } else {\n      const updatedProduct = { ...existingCartProduct,\n        amount: existingCartProduct.amount - 1\n      };\n      updatedProducts = [...state.products];\n      updatedProducts[existingCartProductIndex] = updatedProduct;\n    }\n\n    const cartState = {\n      products: updatedProducts,\n      totalAmount: Math.round((updatedTotalAmount + Number.EPSILON) * 100) / 100\n    };\n    saveCartOnLocal(cartState);\n    return cartState;\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const currProductId = action.payload;\n    const updatedProducts = state.products.filter(product => product._id !== currProductId);\n    const existingCartProductIndex = state.products.findIndex(product => product._id === currProductId);\n    const existingCartProduct = state.products[existingCartProductIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartProduct.price * existingCartProduct.amount;\n    const cartState = {\n      products: updatedProducts,\n      totalAmount: Math.round((updatedTotalAmount + Number.EPSILON) * 100) / 100\n    };\n    saveCartOnLocal(cartState);\n    return cartState;\n  }\n\n  return getLocalCartState() ? getLocalCartState() : defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, getLocalCartState() ? getLocalCartState() : defaultCartState);\n  console.log(cartState);\n\n  const addProductToCartHandler = product => {\n    dispatchCartAction({\n      type: \"ADD\",\n      payload: product\n    });\n  };\n\n  const removeProductFromCartHandler = productId => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      payload: productId\n    });\n  };\n\n  const clearProductFromCart = productId => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      payload: productId\n    });\n  };\n\n  const cartContext = {\n    products: cartState.products,\n    totalAmount: cartState.totalAmount,\n    addProduct: addProductToCartHandler,\n    removeProduct: removeProductFromCartHandler,\n    clearProduct: clearProductFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"SmqStt5SwYAn/vXL3ivnwAFAxdY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","products","totalAmount","saveCartOnLocal","cartState","localStorage","setItem","JSON","stringify","getLocalCartState","state","parse","getItem","cartReducer","action","type","currProduct","payload","updatedTotalAmount","price","amount","console","log","existingCartProductIndex","findIndex","product","_id","existingCartProduct","updatedProducts","updatedProduct","concat","Math","round","Number","EPSILON","currProductId","filter","CartProvider","props","dispatchCartAction","addProductToCartHandler","removeProductFromCartHandler","productId","clearProductFromCart","cartContext","addProduct","removeProduct","clearProduct","children"],"sources":["D:/Web Development/woodsy/frontend/src/context/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  products: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst saveCartOnLocal = (cartState) => {\r\n  localStorage.setItem(\"cartState\", JSON.stringify(cartState));\r\n};\r\n\r\nconst getLocalCartState = () => {\r\n  const state = JSON.parse(localStorage.getItem(\"cartState\"));\r\n  if (state) return { ...state, totalAmount: +state.totalAmount };\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const currProduct = action.payload;\r\n    const updatedTotalAmount =\r\n      state.totalAmount + currProduct.price * currProduct.amount;\r\n\r\n    console.log(updatedTotalAmount);\r\n\r\n    const existingCartProductIndex = state.products.findIndex(\r\n      (product) => product._id === currProduct._id\r\n    );\r\n    const existingCartProduct = state.products[existingCartProductIndex];\r\n\r\n    let updatedProducts;\r\n    if (existingCartProduct) {\r\n      const updatedProduct = {\r\n        ...existingCartProduct,\r\n        amount: existingCartProduct.amount + currProduct.amount,\r\n      };\r\n      updatedProducts = [...state.products];\r\n      updatedProducts[existingCartProductIndex] = updatedProduct;\r\n    } else {\r\n      updatedProducts = state.products.concat(currProduct);\r\n    }\r\n\r\n    const cartState = {\r\n      products: updatedProducts,\r\n      totalAmount: Math.round((updatedTotalAmount + Number.EPSILON) * 100) / 100,\r\n    };\r\n\r\n    saveCartOnLocal(cartState);\r\n    return cartState;\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const currProductId = action.payload;\r\n    const existingCartProductIndex = state.products.findIndex(\r\n      (product) => product._id === currProductId\r\n    );\r\n    const existingCartProduct = state.products[existingCartProductIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingCartProduct.price;\r\n\r\n    let updatedProducts;\r\n    if (existingCartProduct.amount === 1) {\r\n      updatedProducts = state.products.filter(\r\n        (product) => product._id !== currProductId\r\n      );\r\n    } else {\r\n      const updatedProduct = {\r\n        ...existingCartProduct,\r\n        amount: existingCartProduct.amount - 1,\r\n      };\r\n      updatedProducts = [...state.products];\r\n      updatedProducts[existingCartProductIndex] = updatedProduct;\r\n    }\r\n\r\n    const cartState = {\r\n      products: updatedProducts,\r\n      totalAmount: Math.round((updatedTotalAmount + Number.EPSILON) * 100) / 100,\r\n    };\r\n\r\n    saveCartOnLocal(cartState);\r\n    return cartState;\r\n  }\r\n\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    const currProductId = action.payload;\r\n    const updatedProducts = state.products.filter(\r\n      (product) => product._id !== currProductId\r\n    );\r\n    const existingCartProductIndex = state.products.findIndex(\r\n      (product) => product._id === currProductId\r\n    );\r\n    const existingCartProduct = state.products[existingCartProductIndex];\r\n    const updatedTotalAmount =\r\n      state.totalAmount -\r\n      existingCartProduct.price * existingCartProduct.amount;\r\n\r\n    const cartState = {\r\n      products: updatedProducts,\r\n      totalAmount: Math.round((updatedTotalAmount + Number.EPSILON) * 100) / 100,\r\n    };\r\n\r\n    saveCartOnLocal(cartState);\r\n    return cartState;\r\n  }\r\n\r\n  return getLocalCartState() ? getLocalCartState() : defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    getLocalCartState() ? getLocalCartState() : defaultCartState\r\n  );\r\n\r\n  console.log(cartState);\r\n\r\n  const addProductToCartHandler = (product) => {\r\n    dispatchCartAction({\r\n      type: \"ADD\",\r\n      payload: product,\r\n    });\r\n  };\r\n\r\n  const removeProductFromCartHandler = (productId) => {\r\n    dispatchCartAction({\r\n      type: \"REMOVE\",\r\n      payload: productId,\r\n    });\r\n  };\r\n\r\n  const clearProductFromCart = (productId) => {\r\n    dispatchCartAction({\r\n      type: \"REMOVE_ITEM\",\r\n      payload: productId,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    products: cartState.products,\r\n    totalAmount: cartState.totalAmount,\r\n    addProduct: addProductToCartHandler,\r\n    removeProduct: removeProductFromCartHandler,\r\n    clearProduct: clearProductFromCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}