{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\woodsy\\\\src\\\\context\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  products: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const currProduct = action.payload;\n    const updatedTotalAmount = state.totalAmount + currProduct.price * currProduct.amount;\n    const existingCartProductIndex = state.products.findIndex(product => product._id === currProduct._id);\n    const existingCartProduct = state.products[existingCartProductIndex];\n    let updatedProducts;\n\n    if (existingCartProduct) {\n      const updatedProduct = { ...existingCartProduct,\n        amount: existingCartProduct.amount + currProduct.amount\n      };\n      updatedProducts = [...state.products];\n      updatedProducts[existingCartProductIndex] = updatedProduct;\n    } else {\n      updatedProducts = state.products.concat(currProduct);\n    }\n\n    return {\n      products: updatedProducts,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const currProductId = action.payload;\n    const existingCartProductIndex = state.products.findIndex(product => product._id === currProductId);\n    const existingCartProduct = state.products[existingCartProductIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartProduct.price;\n    let updatedProducts;\n\n    if (existingCartProduct.amount === 1) {\n      updatedProducts = state.products.filter(product => product._id !== currProductId);\n    } else {\n      const updatedProduct = { ...existingCartProduct,\n        amount: existingCartProduct.amount - 1\n      };\n      updatedProducts = [...state.products];\n      updatedProducts[existingCartProductIndex] = updatedProduct;\n    }\n\n    return {\n      products: updatedProducts,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addProductToCartHandler = product => {\n    dispatchCartAction({\n      type: \"ADD\",\n      payload: product\n    });\n  };\n\n  const removeProductFromCartHandler = productId => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      payload: productId\n    });\n  };\n\n  const cartContext = {\n    products: cartState.products,\n    totalAmount: cartState.totalAmount,\n    addProduct: addProductToCartHandler,\n    removeProduct: removeProductFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/Web Development/woodsy/src/context/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","products","totalAmount","cartReducer","state","action","type","currProduct","payload","updatedTotalAmount","price","amount","existingCartProductIndex","findIndex","product","_id","existingCartProduct","updatedProducts","updatedProduct","concat","currProductId","filter","CartProvider","props","cartState","dispatchCartAction","addProductToCartHandler","removeProductFromCartHandler","productId","cartContext","addProduct","removeProduct","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\nproducts: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const currProduct = action.payload;\r\n    const updatedTotalAmount =\r\n      state.totalAmount + currProduct.price * currProduct.amount;\r\n\r\n    const existingCartProductIndex = state.products.findIndex(\r\n      (product) => product._id === currProduct._id\r\n    );\r\n    const existingCartProduct = state.products[existingCartProductIndex];\r\n\r\n    let updatedProducts;\r\n    if (existingCartProduct) {\r\n      const updatedProduct = {\r\n        ...existingCartProduct,\r\n        amount: existingCartProduct.amount + currProduct.amount,\r\n      };\r\n      updatedProducts = [...state.products];\r\n      updatedProducts[existingCartProductIndex] = updatedProduct;\r\n    } else {\r\n      updatedProducts = state.products.concat(currProduct);\r\n    }\r\n\r\n    return {\r\n      products: updatedProducts,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const currProductId = action.payload;\r\n    const existingCartProductIndex = state.products.findIndex(\r\n      (product) => product._id === currProductId\r\n    );\r\n    const existingCartProduct = state.products[existingCartProductIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingCartProduct.price;\r\n\r\n    let updatedProducts;\r\n    if (existingCartProduct.amount === 1) {\r\n      updatedProducts = state.products.filter((product) => product._id !== currProductId);\r\n    } else {\r\n      const updatedProduct = {\r\n        ...existingCartProduct,\r\n        amount: existingCartProduct.amount - 1,\r\n      };\r\n      updatedProducts = [...state.products];\r\n      updatedProducts[existingCartProductIndex] = updatedProduct;\r\n    }\r\n\r\n    return {\r\n      products: updatedProducts,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addProductToCartHandler = (product) => {\r\n    dispatchCartAction({\r\n      type: \"ADD\",\r\n      payload: product,\r\n    });\r\n  };\r\n\r\n  const removeProductFromCartHandler = (productId) => {\r\n    dispatchCartAction({\r\n      type: \"REMOVE\",\r\n      payload: productId,\r\n    });\r\n  };\r\n\r\n  const cartContext = {\r\n    products: cartState.products,\r\n    totalAmount: cartState.totalAmount,\r\n    addProduct: addProductToCartHandler,\r\n    removeProduct: removeProductFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}