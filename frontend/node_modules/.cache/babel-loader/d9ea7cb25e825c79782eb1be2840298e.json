{"ast":null,"code":"import _toConsumableArray from \"D:/GithubProjects/Woodsy-Shop/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nfunction prepareClasses(entries, prefix) {\n  var resultClasses = [];\n  entries.forEach(function (item) {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(function (classNames) {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  var swiper = this;\n  var classNames = swiper.classNames,\n      params = swiper.params,\n      rtl = swiper.rtl,\n      $el = swiper.$el,\n      device = swiper.device,\n      support = swiper.support; // prettier-ignore\n\n  var suffixes = prepareClasses(['initialized', params.direction, {\n    'pointer-events': !support.touch\n  }, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push.apply(classNames, _toConsumableArray(suffixes));\n  $el.addClass(_toConsumableArray(classNames).join(' '));\n  swiper.emitContainerClasses();\n}","map":{"version":3,"sources":["D:/GithubProjects/Woodsy-Shop/frontend/node_modules/swiper/core/classes/addClasses.js"],"names":["prepareClasses","entries","prefix","resultClasses","forEach","item","Object","keys","classNames","push","addClasses","swiper","params","rtl","$el","device","support","suffixes","direction","touch","freeMode","enabled","autoHeight","grid","rows","fill","android","ios","cssMode","centeredSlides","watchSlidesProgress","containerModifierClass","addClass","join","emitContainerClasses"],"mappings":";;AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC;AACvC,MAAMC,aAAa,GAAG,EAAtB;AACAF,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,IAAI,EAAI;AACtB,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BC,MAAAA,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBD,OAAlB,CAA0B,UAAAI,UAAU,EAAI;AACtC,YAAIH,IAAI,CAACG,UAAD,CAAR,EAAsB;AACpBL,UAAAA,aAAa,CAACM,IAAd,CAAmBP,MAAM,GAAGM,UAA5B;AACD;AACF,OAJD;AAKD,KAND,MAMO,IAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AACnCF,MAAAA,aAAa,CAACM,IAAd,CAAmBP,MAAM,GAAGG,IAA5B;AACD;AACF,GAVD;AAWA,SAAOF,aAAP;AACD;;AAED,eAAe,SAASO,UAAT,GAAsB;AACnC,MAAMC,MAAM,GAAG,IAAf;AACA,MACEH,UADF,GAOIG,MAPJ,CACEH,UADF;AAAA,MAEEI,MAFF,GAOID,MAPJ,CAEEC,MAFF;AAAA,MAGEC,GAHF,GAOIF,MAPJ,CAGEE,GAHF;AAAA,MAIEC,GAJF,GAOIH,MAPJ,CAIEG,GAJF;AAAA,MAKEC,MALF,GAOIJ,MAPJ,CAKEI,MALF;AAAA,MAMEC,OANF,GAOIL,MAPJ,CAMEK,OANF,CAFmC,CASvB;;AAEZ,MAAMC,QAAQ,GAAGjB,cAAc,CAAC,CAAC,aAAD,EAAgBY,MAAM,CAACM,SAAvB,EAAkC;AAChE,sBAAkB,CAACF,OAAO,CAACG;AADqC,GAAlC,EAE7B;AACD,iBAAaR,MAAM,CAACC,MAAP,CAAcQ,QAAd,IAA0BR,MAAM,CAACQ,QAAP,CAAgBC;AADtD,GAF6B,EAI7B;AACD,kBAAcT,MAAM,CAACU;AADpB,GAJ6B,EAM7B;AACD,WAAOT;AADN,GAN6B,EAQ7B;AACD,YAAQD,MAAM,CAACW,IAAP,IAAeX,MAAM,CAACW,IAAP,CAAYC,IAAZ,GAAmB;AADzC,GAR6B,EAU7B;AACD,mBAAeZ,MAAM,CAACW,IAAP,IAAeX,MAAM,CAACW,IAAP,CAAYC,IAAZ,GAAmB,CAAlC,IAAuCZ,MAAM,CAACW,IAAP,CAAYE,IAAZ,KAAqB;AAD1E,GAV6B,EAY7B;AACD,eAAWV,MAAM,CAACW;AADjB,GAZ6B,EAc7B;AACD,WAAOX,MAAM,CAACY;AADb,GAd6B,EAgB7B;AACD,gBAAYf,MAAM,CAACgB;AADlB,GAhB6B,EAkB7B;AACD,gBAAYhB,MAAM,CAACgB,OAAP,IAAkBhB,MAAM,CAACiB;AADpC,GAlB6B,EAoB7B;AACD,sBAAkBjB,MAAM,CAACkB;AADxB,GApB6B,CAAD,EAsB3BlB,MAAM,CAACmB,sBAtBoB,CAA/B;AAuBAvB,EAAAA,UAAU,CAACC,IAAX,OAAAD,UAAU,qBAASS,QAAT,EAAV;AACAH,EAAAA,GAAG,CAACkB,QAAJ,CAAa,mBAAIxB,UAAJ,EAAgByB,IAAhB,CAAqB,GAArB,CAAb;AACAtB,EAAAA,MAAM,CAACuB,oBAAP;AACD","sourcesContent":["function prepareClasses(entries, prefix) {\r\n  const resultClasses = [];\r\n  entries.forEach(item => {\r\n    if (typeof item === 'object') {\r\n      Object.keys(item).forEach(classNames => {\r\n        if (item[classNames]) {\r\n          resultClasses.push(prefix + classNames);\r\n        }\r\n      });\r\n    } else if (typeof item === 'string') {\r\n      resultClasses.push(prefix + item);\r\n    }\r\n  });\r\n  return resultClasses;\r\n}\r\n\r\nexport default function addClasses() {\r\n  const swiper = this;\r\n  const {\r\n    classNames,\r\n    params,\r\n    rtl,\r\n    $el,\r\n    device,\r\n    support\r\n  } = swiper; // prettier-ignore\r\n\r\n  const suffixes = prepareClasses(['initialized', params.direction, {\r\n    'pointer-events': !support.touch\r\n  }, {\r\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\r\n  }, {\r\n    'autoheight': params.autoHeight\r\n  }, {\r\n    'rtl': rtl\r\n  }, {\r\n    'grid': params.grid && params.grid.rows > 1\r\n  }, {\r\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\r\n  }, {\r\n    'android': device.android\r\n  }, {\r\n    'ios': device.ios\r\n  }, {\r\n    'css-mode': params.cssMode\r\n  }, {\r\n    'centered': params.cssMode && params.centeredSlides\r\n  }, {\r\n    'watch-progress': params.watchSlidesProgress\r\n  }], params.containerModifierClass);\r\n  classNames.push(...suffixes);\r\n  $el.addClass([...classNames].join(' '));\r\n  swiper.emitContainerClasses();\r\n}"]},"metadata":{},"sourceType":"module"}